on:
  workflow_call:
    inputs:
      context:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      tags:
        required: true
        type: string

jobs:
  main:
    runs-on: linux-x64-azure  
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to AscendHub
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: swr.cn-east-3.myhuaweicloud.com
          username: ${{ secrets.ASCENDHUB_USERNAME }}
          password: ${{ secrets.ASCENDHUB_TOKEN }}

      - name: Login to DockerHub
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to Quay
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Login to OpenMind
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: swr.cn-southwest-2.myhuaweicloud.com
          username: ${{ secrets.OPENMIND_USERNAME }}
          password: ${{ secrets.OPENMIND_TOKEN }}

      - name: Login to ghcr.io
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: ${{ github.workspace }}/${{ inputs.context }}
          file: ${{ github.workspace }}/${{ inputs.context }}/${{ inputs.dockerfile }}
          tags: ${{ inputs.tags  }}
          push: ${{ github.event_name == 'release' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Show space
        if: ${{ always() }}
        shell: bash
        run: |
          set -x
          df -h
          docker images -a