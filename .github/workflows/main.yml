name: Main (Build/Publish)

on:
  workflow_call:
    inputs:
      target_name:
        description: 'name of the build target'
        required: true
        type: string
      context:
        description: 'path to the build context'
        required: true
        type: string
      dockerfile:
        description: 'file name of the Dockerfile'
        required: true
        type: string
      repos:
        description: 'name of the repositories'
        required: true
        type: string
      ascendhub_repo:
        description: 'name of the AscendHub repository'
        required: true
        type: string
      common_registry_tags:
        description: 'tags of the common registry'
        required: true
        type: string
      ascendhub_registry_tags:
        description: 'tags of the AscendHub registry'
        required: true
        type: string
      event_name:
        description: 'name of the event that triggered the workflow'
        required: true
        type: string

    secrets:
      QUAY_USERNAME:
        description: 'Username of the Quay registry'
        required: true
      QUAY_TOKEN:
        description: 'Token of the Quay registry'
        required: true
      DOCKER_USERNAME:
        description: 'Username of the DockerHub registry'
        required: true
      DOCKER_TOKEN:
        description: 'Token of the DockerHub registry'
        required: true
      ASCENDHUB_USERNAME:
        description: 'Username of the AscendHub registry'
        required: true
      ASCENDHUB_TOKEN:
        description: 'Token of the AscendHub registry'
        required: true
      
jobs:
  build-cann:
    runs-on: ${{ matrix.runner }}
    strategy:
        matrix:
          include:
            - arch: x86_64
              runner: linux_x86_64_wxs
            - arch: aarch64
              runner: ubuntu-22.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v6
        id: build
        with: 
          platforms: ${{ matrix.arch }}
          tags: ${{ inputs.repos }}
          file: ${{ github.workspace }}/${{ inputs.context }}/${{ inputs.dockerfile }}
          context: ${{ github.workspace }}/${{ inputs.context }}
          outputs: type=docker

      - name: Save digest to file
        run: |
          echo "${{ steps.build.outputs.digest }}" > ${{ runner.temp }}/digests/digest-${{ matrix.arch }}.txt
        shell: bash
      
      - name: Upload digest artifact
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ inputs.target_name }}-${{ matrix.arch }}
          path: ${{ runner.temp }}/digests/digest-${{ matrix.arch }}.txt

  push-cann:
    runs-on: ubuntu-latest
    needs: build-cann
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-${{ inputs.target_name }}-*
          merge-multiple: true

      - name: Login to Quay
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
          ecr: false
          logout: false

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          TAGS_ARRAY=($(echo "${{ inputs.common_registry_tags }}" | sed '/^$/d'))
          DIGESTS=$(ls -1 | xargs -I {} sh -c 'cat {} | tr -d "\n"')
          for TAG in "${TAGS_ARRAY[@]}"; do
            if [[ "$TAG" != *"swr.cn-north-4.myhuaweicloud.com/wxs_test/cann"* ]]; then
              docker buildx imagetools create -t "$TAG" $(printf '@sha256:%s ' $DIGESTS)
            fi
          done

  push-ascendhub:
    runs-on: ubuntu-latest
    needs: push-cann
    steps:
      - name: Login to AscendHub
        uses: docker/login-action@v3
        with:
          registry: swr.cn-north-4.myhuaweicloud.com
          username: ${{ secrets.ASCENDHUB_USERNAME }}
          password: ${{ secrets.ASCENDHUB_TOKEN }}
          ecr: false
          logout: false

      - name: Push to AscendHub
        run: |
            COMMON_TAGS_ARRAY=($(echo "${{ inputs.common_registry_tags }}" | sed '/^$/d'))
            ASCENDHUB_TAGS_ARRAY=($(echo "${{ inputs.ascendhub_registry_tags }}" | sed '/^$/d'))
            docker pull "${COMMON_TAGS_ARRAY[0]}"
            for TAG in "${ASCENDHUB_TAGS_ARRAY[@]}"; do
              docker tag "${COMMON_TAGS_ARRAY[0]}" "${TAG}"
              docker push "${TAG}"
            done

