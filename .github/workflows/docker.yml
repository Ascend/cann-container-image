name: Build CANN Images

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths:
      - ".github/workflows/docker.yml"
      - "cann/**"
      - "arg.json"
  pull_request:
    branches:
      - "main"
    paths:
      - ".github/workflows/docker.yml"
      - "cann/**"
      - "arg.json"
  release:
    types:
      - "published"

jobs:
  prepare:
    name: prepare
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Load config from file
        id: config
        run: |
          CONFIG_JSON=$(jq -c . arg.json)
          echo "config=${CONFIG_JSON}" >> $GITHUB_OUTPUT

      - name: Get repositories
        id: get-repositories
        run: |
          CONFIG=${{ steps.config.outputs.config }}
          REPOSITORIES=$(jq -r '.repository[]' config.json | tr '\n' ' ')
          echo "repositories=${REPOSITORIES}" >> $GITHUB_OUTPUT
      
      - name: Set build matrix
        id: set-matrix
        run: |
          CONFIG=${{ steps.config.outputs.config }}
          MATRIX=$(echo "$CONFIG" | jq -r 'map({
            dockerfile: "cann/\.tags.common[0])/Dockerfile",
            primary_tag: .tags.common[0],
            common_tags: .tags.common,
            ascendhub_tags: .tags.ascendhub,
          })')
          echo "matrix=${MATRIX}" >> $GITHUB_OUTPUT

  build:
    name: build ${{ matrix.primary_tag }}
    runs-on: linux-x64-azure
    needs:
      - prepare
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to AscendHub
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: swr.cn-east-3.myhuaweicloud.com
          username: ${{ secrets.ASCENDHUB_USERNAME }}
          password: ${{ secrets.ASCENDHUB_TOKEN }}

      - name: Login to DockerHub
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to Quay
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Login to OpenMind
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: swr.cn-southwest-2.myhuaweicloud.com
          username: ${{ secrets.OPENMIND_USERNAME }}
          password: ${{ secrets.OPENMIND_TOKEN }}

      - name: Login to ghcr.io
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: metadata
        uses: docker/metadata-action@v5
        with:
          bake-target: "docker-metadata-action"

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ${{ matrix.dockerfile }}
          tags: |
            ${{ fromJson(needs.prepare.outputs.repositories)[0] }}:{{
              join(format('{0}', matrix.common_tags), '\n' + fromJson(needs.prepare.outputs.registries)[0] + ':' }}
            ${{ fromJson(needs.prepare.outputs.repositories)[1] }}:{{
              join(format('{0}', matrix.ascendhub_tags), '\n' + fromJson(needs.prepare.outputs.registries)[1] + ':' }}
            ${{ fromJson(needs.prepare.outputs.repositories)[2] }}:{{
              join(format('{0}', matrix.ascendhub_tags), '\n' + fromJson(needs.prepare.outputs.registries)[2] + ':' }}
            ${{ fromJson(needs.prepare.outputs.repositories)[3] }}:{{
              join(format('{0}', matrix.ascendhub_tags), '\n' + fromJson(needs.prepare.outputs.registries)[3] + ':' }}

      - name: Show space
        if: ${{ always() }}
        shell: bash
        run: |
          set -x
          df -h
          docker images -a
