name: Build and Publish Manylinux_based CANN Image

on:
  workflow_dispatch:
    inputs:
      cann_tag:
        description: 'CANN unique tag'
        required: true
        default: '8.3.rc1.alpha002-910b-manylinux_2_28-py3.11'
        type: choice
        options:
          - 8.3.rc1.alpha002-910b-manylinux_2_28-py3.11
          - 8.3.rc1.alpha002-910b-manylinux_2_28-py3.10
          - 8.3.rc1.alpha002-910b-manylinux_2_28-py3.9
          - 8.3.rc1.alpha002-310p-manylinux_2_28-py3.11
          - 8.3.rc1.alpha002-310p-manylinux_2_28-py3.10
          - 8.3.rc1.alpha002-310p-manylinux_2_28-py3.9
          - 8.3.rc1.alpha001-910b-manylinux_2_28-py3.11
          - 8.3.rc1.alpha001-910b-manylinux_2_28-py3.10
          - 8.3.rc1.alpha001-910b-manylinux_2_28-py3.9
          - 8.3.rc1.alpha001-310p-manylinux_2_28-py3.11
          - 8.3.rc1.alpha001-310p-manylinux_2_28-py3.10
          - 8.3.rc1.alpha001-310p-manylinux_2_28-py3.9
          - 8.2.rc1-910b-manylinux_2_28-py3.11
          - 8.2.rc1-910b-manylinux_2_28-py3.10
          - 8.2.rc1-910b-manylinux_2_28-py3.9
          - 8.2.rc1-310p-manylinux_2_28-py3.11
          - 8.2.rc1-310p-manylinux_2_28-py3.10
          - 8.2.rc1-310p-manylinux_2_28-py3.9
          - 8.2.rc1.alpha003-910b-manylinux_2_28-py3.11
          - 8.2.rc1.alpha003-910b-manylinux_2_28-py3.10
          - 8.2.rc1.alpha003-910b-manylinux_2_28-py3.9
          - 8.2.rc1.alpha003-310p-manylinux_2_28-py3.11
          - 8.2.rc1.alpha003-310p-manylinux_2_28-py3.10
          - 8.2.rc1.alpha003-310p-manylinux_2_28-py3.9
          - 8.1.rc1-910b-manylinux_2_28-py3.11
          - 8.1.rc1-910b-manylinux_2_28-py3.10
          - 8.1.rc1-910b-manylinux_2_28-py3.9
          - 8.1.rc1-310p-manylinux_2_28-py3.11
          - 8.1.rc1-310p-manylinux_2_28-py3.10
          - 8.1.rc1-310p-manylinux_2_28-py3.9
          - 8.0.0-910b-manylinux_2_28-py3.11
          - 8.0.0-910b-manylinux_2_28-py3.10
          - 8.0.0-910b-manylinux_2_28-py3.9
          - 8.0.0-310p-manylinux_2_28-py3.11
          - 8.0.0-310p-manylinux_2_28-py3.10
          - 8.0.0-310p-manylinux_2_28-py3.9
      publish:
        description: 'Publish the image'
        default: false
        type: boolean
        required: true

jobs:
  only-build:
    name: build ${{ inputs.cann_tag }} (${{ matrix.arch }})
    if: ${{ !inputs.publish }} 
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - arch: x86_64
            runner: linux-x86_64
          - arch: aarch64
            runner: ubuntu-22.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v6
        id: build
        with: 
          platforms: ${{ matrix.arch }}
          file: ${{ github.workspace }}/manylinux/${{ inputs.cann_tag }}/Dockerfile
          context: ${{ github.workspace }}/manylinux/${{ inputs.cann_tag }}
          outputs: type=image
          provenance: false

  build-push-digest:
    name: build ${{ inputs.cann_tag }} (${{ matrix.arch }})
    if: ${{ inputs.publish }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - arch: x86_64
            runner: linux-x86_64
          - arch: aarch64
            runner: ubuntu-22.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
          ecr: false
          logout: false

      - name: Build and push by digest
        uses: docker/build-push-action@v6
        id: build
        with: 
          platforms: ${{ matrix.arch }}
          tags: |
            quay.io/ascend/manylinux
          file: ${{ github.workspace }}/manylinux/${{ inputs.cann_tag }}/Dockerfile
          context: ${{ github.workspace }}/manylinux/${{ inputs.cann_tag }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          provenance: false

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ inputs.cann_tag }}-${{ matrix.arch }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1
  
  push-image:
    runs-on: ubuntu-latest
    needs: build-push-digest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-${{ inputs.cann_tag }}-*
          merge-multiple: true

      - name: Login to Quay
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare tags
        id: prepare-tags
        run: |
          BASE_TAG=$(jq -r --arg cann_tag "${{ inputs.cann_tag }}" \
            '.versions[] | select(.path == "manylinux/" + $cann_tag) | .tags[0]' \
            manylinux_publish_version.json)
          registry="quay.io/ascend/manylinux"
          TAGS_JSON="[\"${registry}:${BASE_TAG}\"]"
          echo "tags=${TAGS_JSON}" >> $GITHUB_OUTPUT

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        env:
          TAGS: ${{ steps.prepare-tags.outputs.tags }}
        run: |
          TAG=$(echo "$TAGS" | jq -r '.[0]')
          if [[ "$TAG" == *"quay.io/ascend/manylinux"* ]]; then
            docker buildx imagetools create -t "$TAG" \
              $(printf 'quay.io/ascend/manylinux@sha256:%s ' *)
          else
            echo "Error: Unknown registry in TAG: $TAG"
            exit 1
          fi

  sync-image:
    runs-on: ubuntu-latest
    needs: push-image
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install skopeo
        run: |
          sudo apt update
          sudo apt install -y skopeo

      - name: Login to Huawei Cloud SWR
        run: |
          echo "${{ secrets.HW_TOKEN }}" | skopeo login \
            --username "${{ secrets.HW_USERNAME }}" \
            --password-stdin \
            swr.cn-southwest-2.myhuaweicloud.com/base_image/ascend-ci

      - name: Sync image
        run: |
          skopeo copy --all \
          docker://quay.io/ascend/manylinux:${{ inputs.cann_tag }} \
          docker://swr.cn-southwest-2.myhuaweicloud.com/base_image/ascend-ci/manylinux:${{ inputs.cann_tag }}
